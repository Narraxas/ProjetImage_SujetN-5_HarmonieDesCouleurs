<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>799</width>
    <height>556</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>HarmonyApp</string>
  </property>
  <property name="styleSheet">
   <string notr="true">background-color: rgb(253, 205, 166);
color: rgb(27, 27, 27);</string>
  </property>
  <widget class="QWidget" name="centralwidget">
   <widget class="QPushButton" name="pushButton">
    <property name="geometry">
     <rect>
      <x>30</x>
      <y>420</y>
      <width>151</width>
      <height>24</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true"> QPushButton {
     border: 1px solid #2d2e32;
     border-radius: 6px;
	color: rgb(255, 255, 255);
	background-color: rgb(56, 58, 63);
     min-width: 80px;
 }
 
 QPushButton:pressed {
     background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                       stop: 0 #dadbde, stop: 1 #f6f7fa);
 }
 
 QPushButton:flat {
     border: none; /* no border for a flat push button */
 }
 
 QPushButton:default {
     border-color: navy; /* make the default button prominent */
 }</string>
    </property>
    <property name="text">
     <string>Open file</string>
    </property>
   </widget>
   <widget class="QFrame" name="originalFrame">
    <property name="geometry">
     <rect>
      <x>20</x>
      <y>20</y>
      <width>361</width>
      <height>391</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color: rgb(255, 255, 255);</string>
    </property>
    <property name="frameShape">
     <enum>QFrame::StyledPanel</enum>
    </property>
    <property name="frameShadow">
     <enum>QFrame::Raised</enum>
    </property>
   </widget>
   <widget class="QComboBox" name="harmonyComboBox">
    <property name="geometry">
     <rect>
      <x>30</x>
      <y>450</y>
      <width>251</width>
      <height>24</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true"> QComboBox {
     border: 1px solid gray;
     border-radius: 3px;
     padding: 1px 18px 1px 3px;
     min-width: 6em;
	background-color: rgb(255, 255, 255);
 }
 
 QComboBox:editable {
     background: white;
 }
 
 QComboBox:!editable, QComboBox::drop-down:editable {
	background-color: rgb(255, 255, 255);
 }
 
 /* QComboBox gets the &quot;on&quot; state when the popup is open */
 QComboBox:!editable:on, QComboBox::drop-down:editable:on {
	background-color: rgb(255, 255, 255);
 }
 
 QComboBox:on { /* shift the text when the popup opens */
     padding-top: 3px;
     padding-left: 4px;
	background-color: rgb(255, 255, 255);
 }
 
 QComboBox::drop-down {
     subcontrol-origin: padding;
     subcontrol-position: top right;
     width: 15px;
	background-color: rgb(255, 255, 255);
 
     border-left-width: 1px;
     border-left-color: darkgray;
     border-left-style: solid; /* just a single line */
     border-top-right-radius: 3px; /* same radius as the QComboBox */
     border-bottom-right-radius: 3px;
 }
 </string>
    </property>
    <item>
     <property name="text">
      <string>Sélectionnez une harmonie</string>
     </property>
    </item>
    <item>
     <property name="text">
      <string>getDominantColors</string>
     </property>
    </item>
    <item>
     <property name="text">
      <string>Monochromatique</string>
     </property>
    </item>
    <item>
     <property name="text">
      <string>Analogue</string>
     </property>
    </item>
    <item>
     <property name="text">
      <string>Complémentaire</string>
     </property>
    </item>
    <item>
     <property name="text">
      <string>Triadique</string>
     </property>
    </item>
    <item>
     <property name="text">
      <string>Quadratique</string>
     </property>
    </item>
    <item>
     <property name="text">
      <string>ComplémentaireB</string>
     </property>
    </item>
    <item>
     <property name="text">
      <string>TriadiqueB</string>
     </property>
    </item>
    <item>
     <property name="text">
      <string>Analogue par distance</string>
     </property>
    </item>
    <item>
     <property name="text">
      <string>Complémentaire par distance</string>
     </property>
    </item>
    <item>
     <property name="text">
      <string>Triadique par distance</string>
     </property>
    </item>
    <item>
     <property name="text">
      <string>Quadratique par distance</string>
     </property>
    </item>
   </widget>
   <widget class="QFrame" name="modifiedFrame">
    <property name="geometry">
     <rect>
      <x>420</x>
      <y>20</y>
      <width>361</width>
      <height>391</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color: rgb(255, 255, 255);</string>
    </property>
    <property name="frameShape">
     <enum>QFrame::StyledPanel</enum>
    </property>
    <property name="frameShadow">
     <enum>QFrame::Raised</enum>
    </property>
    <widget class="QProgressBar" name="progressBarImgOut">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>360</y>
       <width>341</width>
       <height>23</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QProgressBar {
    border: 2px solid grey;
    border-radius: 5px;
    text-align: center;
}

QProgressBar::chunk {
    background-color: #05B8CC;
    width: 20px;
}</string>
     </property>
     <property name="value">
      <number>24</number>
     </property>
    </widget>
   </widget>
   <widget class="QPushButton" name="colorBtn">
    <property name="geometry">
     <rect>
      <x>190</x>
      <y>420</y>
      <width>171</width>
      <height>24</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true"> QPushButton {
     border: 1px solid #2d2e32;
     border-radius: 6px;
	color: rgb(255, 255, 255);
	background-color: rgb(56, 58, 63);
     min-width: 80px;
 }
 
 QPushButton:pressed {
     background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                       stop: 0 #dadbde, stop: 1 #f6f7fa);
 }
 
 QPushButton:flat {
     border: none; /* no border for a flat push button */
 }
 
 QPushButton:default {
     border-color: navy; /* make the default button prominent */
 }</string>
    </property>
    <property name="text">
     <string>Choose a color</string>
    </property>
   </widget>
   <widget class="QPushButton" name="pushButton_2">
    <property name="geometry">
     <rect>
      <x>30</x>
      <y>490</y>
      <width>341</width>
      <height>51</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true"> QPushButton {
     border: 2px solid #2d2e32;
     border-radius: 10px;
	color: rgb(255, 255, 255);
	background-color: rgb(56, 58, 63);
     min-width: 80px;
 }
 
 QPushButton:pressed {
     background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                       stop: 0 #dadbde, stop: 1 #f6f7fa);
 }
 
 QPushButton:flat {
     border: none; /* no border for a flat push button */
 }
 
 QPushButton:default {
     border-color: navy; /* make the default button prominent */
 }</string>
    </property>
    <property name="text">
     <string>Generate the image</string>
    </property>
   </widget>
   <widget class="QCheckBox" name="isBlurred">
    <property name="geometry">
     <rect>
      <x>430</x>
      <y>420</y>
      <width>181</width>
      <height>23</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true"> QCheckBox {
     spacing: 5px;
 }
 
 QCheckBox::indicator {
     width: 13px;
     height: 13px;
 }
 </string>
    </property>
    <property name="text">
     <string>Flou Gaussien</string>
    </property>
   </widget>
   <widget class="QCheckBox" name="isOpenedClosed">
    <property name="geometry">
     <rect>
      <x>430</x>
      <y>460</y>
      <width>181</width>
      <height>23</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true"> QCheckBox {
     spacing: 5px;
 }
 
 QCheckBox::indicator {
     width: 13px;
     height: 13px;
 }
 </string>
    </property>
    <property name="text">
     <string>Ouverture/Fermeture</string>
    </property>
   </widget>
   <widget class="QSlider" name="intensiteFlou">
    <property name="geometry">
     <rect>
      <x>440</x>
      <y>440</y>
      <width>160</width>
      <height>16</height>
     </rect>
    </property>
    <property name="minimumSize">
     <size>
      <width>160</width>
      <height>0</height>
     </size>
    </property>
    <property name="orientation">
     <enum>Qt::Horizontal</enum>
    </property>
   </widget>
   <widget class="QLabel" name="valueIntensiteFlou">
    <property name="geometry">
     <rect>
      <x>610</x>
      <y>440</y>
      <width>101</width>
      <height>17</height>
     </rect>
    </property>
    <property name="text">
     <string>Valeur du flou</string>
    </property>
   </widget>
   <widget class="QSlider" name="seuilDistance">
    <property name="geometry">
     <rect>
      <x>440</x>
      <y>480</y>
      <width>160</width>
      <height>16</height>
     </rect>
    </property>
    <property name="orientation">
     <enum>Qt::Horizontal</enum>
    </property>
   </widget>
   <widget class="QPushButton" name="saveBtn">
    <property name="geometry">
     <rect>
      <x>630</x>
      <y>480</y>
      <width>141</width>
      <height>61</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true"> QPushButton {
     border: 2px solid #2d2e32;
     border-radius: 10px;
	color: rgb(255, 255, 255);
	background-color: rgb(56, 58, 63);
     min-width: 80px;
 }
 
 QPushButton:pressed {
     background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                       stop: 0 #dadbde, stop: 1 #f6f7fa);
 }
 
 QPushButton:flat {
     border: none; /* no border for a flat push button */
 }
 
 QPushButton:default {
     border-color: navy; /* make the default button prominent */
 }</string>
    </property>
    <property name="text">
     <string>Save</string>
    </property>
   </widget>
  </widget>
 </widget>
 <resources/>
 <connections/>
</ui>
